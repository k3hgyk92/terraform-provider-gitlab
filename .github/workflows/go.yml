# Checks to run on code changes.

name: go

on:
  push:
    paths:
      - '!docs/**'
      - '!examples/**'
      - '!README.md'
      - '!CHANGELOG.md'
  pull_request:
    paths:
      - '!docs/**'
      - '!examples/**'
      - '!README.md'
      - '!CHANGELOG.md'

jobs:
  go-version:
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.go-version.outputs.go-version }}
    steps:
      - uses: actions/checkout@v2
      - id: go-version
        run: echo "::set-output name=go-version::$(cat .go-version)"

  tfprovider-lint:
    runs-on: ubuntu-latest
    needs: [go-version]
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ needs.go-version.outputs.go-version }}
      - uses: actions/checkout@v2
      - run: make lint-tfprovider

  golangci-lint:
    runs-on: ubuntu-latest
    needs: [go-version]
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ needs.go-version.outputs.go-version }}
      - uses: actions/checkout@v2
      - run: make lint-golangci

  unit-test:
    runs-on: ${{ matrix.os }}
    needs: [go-version]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ needs.go-version.outputs.go-version }}
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go${{ env.GO_VERSION }}-${{ hashFiles('go.sum') }}-no-tools
      - run: make test
