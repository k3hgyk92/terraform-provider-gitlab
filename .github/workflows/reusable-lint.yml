# Lint jobs are are fast checks that do not require any permissions to run.

on:
  workflow_call: {}

jobs:
  go-version:
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.go-version.outputs.go-version }}
    steps:
      - uses: actions/checkout@v2
      - id: go-version
        run: echo "::set-output name=go-version::$(cat .go-version)"

  examples-tf-lint:
    runs-on: ubuntu-latest
    needs: [go-version]
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ needs.go-version.outputs.go-version }}
      - uses: actions/checkout@v2
      - run: make lint-examples-tf

  examples-sh-lint:
    runs-on: ubuntu-latest
    needs: [go-version]
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ needs.go-version.outputs.go-version }}
      - uses: actions/checkout@v2
      - run: make lint-examples-sh

  generate-check:
    runs-on: ubuntu-latest
    needs: [go-version]
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ needs.go-version.outputs.go-version }}
      - uses: actions/checkout@v2
      - run: make generate
      - name: Check generated files
        run: |
          [ -z "$(git status --short)" ] || { echo "Error: Files should have been generated:"; git status --short; echo "Diff:"; git diff HEAD; exit 1; }

  tfprovider-lint:
    runs-on: ubuntu-latest
    needs: [go-version]
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ needs.go-version.outputs.go-version }}
      - uses: actions/checkout@v2
      - run: make lint-tfprovider

  golangci-lint:
    runs-on: ubuntu-latest
    needs: [go-version]
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ needs.go-version.outputs.go-version }}
      - uses: actions/checkout@v2
      - run: make lint-golangci

  unit-test:
    runs-on: ${{ matrix.os }}
    needs: [go-version]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ needs.go-version.outputs.go-version }}
      - uses: actions/checkout@v2
      - run: make test
