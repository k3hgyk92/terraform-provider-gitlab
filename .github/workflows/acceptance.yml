# Acceptance test checks run at the same time as regular code checks.
#
# Using the "workflow_run" event type here means that the workflow runs in the context of the main
# repository, so it has access to secrets for decrypting the GitLab license file.
#
# The "schedule" event type runs acceptance tests weekly, to catch potential issues with the latest
# GitLab version.
#
# The "workflow_dispatch" event type lets us trigger acceptance tests manually if needed.

name: acceptance

on:
  workflow_run:
    workflows: [go]
    types: [requested]
  schedule:
    #         ┌───────────── minute (0 - 59)
    #         │ ┌───────────── hour (0 - 23)
    #         │ │ ┌───────────── day of the month (1 - 31)
    #         │ │ │ ┌───────────── month (1 - 12 or JAN-DEC)
    #         │ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
    #         * * * * *
    - cron:  '0 0 * * 3'
  workflow_dispatch: {}

jobs:
  go-version:
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.go-version.outputs.go-version }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
      - id: go-version
        run: echo "::set-output name=go-version::$(cat .go-version)"

  acceptance-ce:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: [go-version]
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ needs.go-version.outputs.go-version }}
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
      - run: make testacc-up
      - run: make testacc

  acceptance-ee:
    if: ${{ github.repository_owner == 'armsnyder' }}
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: [go-version]
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ needs.go-version.outputs.go-version }}
      - uses: actions/checkout@v2
      - name: Decrypt license
        run: |
          openssl version
          openssl enc -d -aes-256-cbc -pbkdf2 -iter 20000 -in Gitlab-license.encrypted -out Gitlab-license.txt -pass "pass:${{ secrets.LICENSE_ENCRYPTION_PASSWORD }}"
      - run: make testacc-up SERVICE=gitlab-ee
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
      - run: ls
      - run: make testacc
